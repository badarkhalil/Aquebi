<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2023-06-13 21:39:27              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer\Helpers; class RequirementsChecker { private $_minPhpVersion = "\67\x2e\x32\56\x30"; public function check(array $requirements) { $results = []; foreach ($requirements as $type => $requirement) { switch ($type) { case "\160\x68\160": foreach ($requirements[$type] as $requirement) { $results["\x72\x65\161\x75\151\x72\145\x6d\x65\156\164\163"][$type][$requirement] = true; if (extension_loaded($requirement)) { goto uZFTQ; } $results["\x72\x65\161\165\151\x72\x65\x6d\x65\x6e\x74\163"][$type][$requirement] = false; $results["\x65\x72\162\157\x72\163"] = true; uZFTQ: WrLMN: } PmCx9: goto IPkB6; case "\x61\x70\x61\143\150\x65": foreach ($requirements[$type] as $requirement) { if (!function_exists("\x61\160\141\143\150\x65\x5f\147\145\x74\x5f\155\157\144\165\x6c\x65\163")) { goto OO1VV; } $results["\162\x65\161\x75\x69\x72\145\155\x65\x6e\164\x73"][$type][$requirement] = true; if (in_array($requirement, apache_get_modules())) { goto a3nRo; } $results["\162\145\161\x75\x69\x72\x65\155\145\x6e\164\x73"][$type][$requirement] = false; $results["\145\162\x72\x6f\x72\163"] = true; a3nRo: OO1VV: SvkgI: } My09A: goto IPkB6; } XkaIn: IPkB6: bV630: } zrj7f: return $results; } public function checkPHPversion(string $minPhpVersion = null, string $maxPhpVersion = null) { $currentPhpVersion = $this->getPhpVersionInfo(); $supported = false; if (!($minPhpVersion == null)) { goto WkwGk; } $minPhpVersion = $this->getMinPhpVersion(); WkwGk: if ($maxPhpVersion == null && version_compare($currentPhpVersion["\x76\145\162\163\x69\157\x6e"], $minPhpVersion, "\76\75")) { goto jkZvI; } if (version_compare($currentPhpVersion["\x76\145\x72\163\x69\x6f\156"], $minPhpVersion, "\x3e\x3d") && version_compare($currentPhpVersion["\x76\x65\x72\x73\x69\157\156"], $maxPhpVersion, "\74\75")) { goto CRpqc; } goto umDp9; jkZvI: $supported = true; goto umDp9; CRpqc: $supported = true; umDp9: $phpStatus = ["\146\165\154\x6c" => $currentPhpVersion["\146\x75\x6c\x6c"], "\143\165\x72\162\x65\x6e\164" => $currentPhpVersion["\x76\x65\162\163\151\157\x6e"], "\155\x69\x6e\x69\x6d\x75\x6d" => $minPhpVersion, "\155\141\170\x69\x6d\165\x6d" => $maxPhpVersion, "\163\165\x70\160\157\162\x74\x65\144" => $supported]; return $phpStatus; } private static function getPhpVersionInfo() { $currentVersionFull = PHP_VERSION; preg_match("\43\x5e\134\x64\53\x28\134\x2e\134\144\53\x29\x2a\x23", $currentVersionFull, $filtered); $currentVersion = $filtered[0]; return ["\x66\x75\x6c\154" => $currentVersionFull, "\166\x65\x72\x73\x69\x6f\x6e" => $currentVersion]; } protected function getMinPhpVersion() { return $this->_minPhpVersion; } }
